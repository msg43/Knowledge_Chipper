#!/bin/bash
# Setup notification system for yt-dlp releases
# Offers multiple monitoring options

set -e

echo "🔔 yt-dlp Release Notification Setup"
echo "====================================="
echo ""
echo "Choose your monitoring method:"
echo ""
echo "1. GitHub Watch (Recommended)"
echo "   - Get notifications on GitHub"
echo "   - Optional email notifications"
echo ""
echo "2. RSS Feed"
echo "   - Add to your RSS reader"
echo "   - No GitHub account needed"
echo ""
echo "3. Weekly Cron Job"
echo "   - Automatic weekly checks"
echo "   - macOS notifications"
echo ""
echo "4. All of the above"
echo ""
read -p "Select option (1-4): " -n 1 -r choice
echo ""
echo ""

case $choice in
    1|4)
        echo "📧 Setting up GitHub Watch..."
        echo ""
        echo "Follow these steps:"
        echo "  1. Go to: https://github.com/yt-dlp/yt-dlp"
        echo "  2. Click 'Watch' button (top right)"
        echo "  3. Select 'Custom'"
        echo "  4. Check 'Releases'"
        echo "  5. Click 'Apply'"
        echo ""
        echo "For email notifications:"
        echo "  1. Go to GitHub Settings → Notifications"
        echo "  2. Enable 'Email' for 'Watching'"
        echo ""
        read -p "Press Enter when done..."
        echo "✅ GitHub Watch setup complete"
        echo ""
        ;&
    2|4)
        echo "📰 RSS Feed Information"
        echo ""
        echo "Add this URL to your RSS reader:"
        echo "  https://github.com/yt-dlp/yt-dlp/releases.atom"
        echo ""
        echo "Recommended RSS readers for macOS:"
        echo "  - NetNewsWire (Free): https://netnewswire.com/"
        echo "  - Reeder: https://reederapp.com/"
        echo "  - Feedly (Web): https://feedly.com/"
        echo ""
        if [ "$choice" = "2" ]; then
            read -p "Press Enter when done..."
        fi
        echo "✅ RSS feed info provided"
        echo ""
        ;&
    3|4)
        echo "⏰ Setting up Weekly Cron Job..."
        echo ""

        SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
        PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"

        # Create notification script
        NOTIFY_SCRIPT="$HOME/.ytdlp_notify.sh"
        cat > "$NOTIFY_SCRIPT" << 'EOF'
#!/bin/bash
# Auto-generated by setup_ytdlp_notifications.sh

PROJECT_DIR="__PROJECT_DIR__"
cd "$PROJECT_DIR"

# Run check and capture output
OUTPUT=$(./scripts/check_ytdlp_changelog.sh 2>&1)
RESULT=$?

# Save to log
LOG_FILE="$HOME/.ytdlp_check.log"
echo "=== Check at $(date) ===" > "$LOG_FILE"
echo "$OUTPUT" >> "$LOG_FILE"

# If update available, show notification
if echo "$OUTPUT" | grep -q "UPDATE"; then
    VERSION=$(echo "$OUTPUT" | grep "Latest version" | awk '{print $3}')
    osascript -e "display notification \"yt-dlp $VERSION available. Run 'make check-ytdlp-releases' to see details.\" with title \"yt-dlp Update Available\" sound name \"default\""

    # Also log to system
    echo "$(date): yt-dlp update available - $VERSION" >> "$HOME/.ytdlp_updates.log"
fi

exit 0
EOF

        # Replace placeholder
        sed -i '' "s|__PROJECT_DIR__|$PROJECT_ROOT|g" "$NOTIFY_SCRIPT"
        chmod +x "$NOTIFY_SCRIPT"

        echo "Created notification script at: $NOTIFY_SCRIPT"
        echo ""

        # Check if cron job already exists
        if crontab -l 2>/dev/null | grep -q "ytdlp_notify"; then
            echo "Cron job already exists. Skipping..."
        else
            # Add to crontab
            echo "Adding cron job (checks every Monday at 9 AM)..."
            (crontab -l 2>/dev/null; echo "# yt-dlp release checker"; echo "0 9 * * 1 $NOTIFY_SCRIPT") | crontab -
            echo "✅ Cron job added"
        fi

        echo ""
        echo "You'll get a macOS notification when updates are available."
        echo "Check details with: make check-ytdlp-releases"
        echo ""
        echo "To remove cron job later:"
        echo "  crontab -e"
        echo "  (delete the ytdlp_notify line)"
        echo ""
        ;;
esac

echo ""
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo "✅ Setup Complete!"
echo "━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━"
echo ""
echo "Test your setup:"
echo "  make check-ytdlp-releases"
echo ""
echo "When notified of updates, run:"
echo "  make test-ytdlp-update"
echo ""
echo "See full documentation:"
echo "  docs/YT-DLP_MONITORING_GUIDE.md"
echo ""
