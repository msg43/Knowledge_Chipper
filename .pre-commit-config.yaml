# Pre-commit hooks for Knowledge_Chipper
# See https://pre-commit.com for more information
# Run `pre-commit install` to set up the hooks

repos:
  # Standard pre-commit hooks for general file hygiene
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'  # Allow trailing spaces in markdown (for line breaks)
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']  # Allow custom YAML tags used in config files
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=10000']  # 10MB limit for large files
      - id: check-merge-conflict
      - id: debug-statements
      - id: check-docstring-first
      - id: check-case-conflict
      - id: mixed-line-ending
        args: ['--fix=lf']

  # Python code formatting with Black (line length 88 to match pyproject.toml)
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        language_version: python3.13
        args: ['--line-length=88', '--target-version=py312']  # py313 not yet supported

  # Import sorting with isort (configured to work with Black)
  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile=black', '--line-length=88']

  # Python linting with flake8 (matching CI configuration)
  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        args:
          - '--max-line-length=100'  # Slightly more lenient than Black's 88 for comments
          - '--max-complexity=10'
          - '--select=E9,F63,F7,F82'  # Critical errors only for now
          - '--extend-ignore=E203,W503'  # Black compatibility
        additional_dependencies:
          - flake8-docstrings
          - flake8-bugbear
          - flake8-comprehensions

  # Type checking with mypy (using pyproject.toml config)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        args: ['--config-file=pyproject.toml', '--ignore-missing-imports']
        additional_dependencies:
          - types-requests
          - types-PyYAML
          - types-python-dateutil
          - types-setuptools
        files: ^src/
        exclude: ^tests/

  # Security scanning with bandit
  - repo: https://github.com/pycqa/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-f', 'json']  # Scan individual files passed by pre-commit
        files: ^src/.*\.py$
        exclude: ^tests/

  # Docstring style checking
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        args: ['--convention=google']
        files: ^src/
        exclude: '__init__\.py$'

  # Upgrade Python syntax for newer versions
  - repo: https://github.com/asottile/pyupgrade
    rev: v3.15.0
    hooks:
      - id: pyupgrade
        args: ['--py312-plus']  # py313 not yet supported

  # Check for common Python anti-patterns
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-no-log-warn
      - id: python-use-type-annotations
      - id: python-check-blanket-noqa
      - id: python-check-mock-methods

  # YAML formatting (disabled due to SSL cert issues on macOS)
  # - repo: https://github.com/pre-commit/mirrors-prettier
  #   rev: v4.0.0-alpha.8
  #   hooks:
  #     - id: prettier
  #       types: [yaml]
  #       exclude: '^\.github/'  # GitHub workflow files have specific formatting

  # Commit message linting (conventional commits)
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
        stages: [commit-msg]

# Configuration for the pre-commit framework itself
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: [commitizen]  # Skip commit message linting in CI
  submodules: false
