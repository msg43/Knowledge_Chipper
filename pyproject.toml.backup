[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "knowledge-system"
version = "3.2.82"
description = "Skip the Podcast Desktop - A comprehensive knowledge management system for macOS that transforms videos, audio files, and documents into organized, searchable knowledge."
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Matthew Greer", email = "matthew.greer@example.com"},
]
keywords = ["knowledge-management", "transcription", "summarization", "macos", "ai"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Sound/Audio :: Analysis",
    "Topic :: Multimedia :: Video :: Analysis",
]

dependencies = [
    # Core framework
    "click>=8.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "pyyaml>=6.0",
    "loguru>=0.7.0",
    "rich>=13.0.0",

    # Web UI
    "streamlit>=1.28.0",
    "streamlit-option-menu>=0.3.0",

    # File processing
    "watchdog>=3.0.0",
    "pypdf2>=3.0.0",
    "pdfplumber>=0.10.0",
    "beautifulsoup4>=4.12.0",

    # YouTube and video
    # PRODUCTION PIN: Match requirements.txt for consistent builds
    "yt-dlp==2025.9.26",  # Last tested: 2025-10-11 - See docs/DEPENDENCY_UPDATE_STRATEGY.md
    "requests>=2.31.0",

    # ML and transcription (core) - using whisper.cpp instead of openai-whisper to save ~400MB
    # "openai-whisper>=20231117",  # Removed - pulls in torch, using whisper.cpp binary instead
    "pydub>=0.25.1",  # Audio processing and manipulation

    # LLM APIs
    "openai>=1.3.0",
    "anthropic>=0.7.0",

    # Data and storage
    "sqlalchemy>=2.0.0",
    "pandas>=2.0.0",

    # Utilities
    "python-dotenv>=0.19.0",
    "youtube-transcript-api>=1.1.1",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.5.0",
    "pre-commit>=3.4.0",
    "build>=0.10.0",
    "twine>=4.0.0",
]

gui = [
    "PyQt6>=6.9.0",
]

cuda = [
    "nvidia-ml-py>=12.550.0",  # pynvml for detailed GPU info
]

# Lazy-loaded diarization dependencies (saves ~377MB initial install)
diarization = [
    "torch>=2.1.0",
    "transformers>=4.35.0",
    "pyannote.audio>=3.1.0",
    "huggingface_hub>=0.20.0",  # Required for model downloads
    "librosa>=0.10.0",  # Required for voice fingerprinting
]

# HCE (Hybrid Claim Extractor) heavy ML dependencies (saves ~500MB initial install)
hce = [
    "torch>=2.1.0",
    "transformers>=4.35.0",
    "sentence-transformers>=2.2.0",
]

# Full installation including all optional features
full = [
    "knowledge-system[gui,diarization,hce,cuda]",
]

[project.scripts]
# CLI removed - GUI-only application
knowledge-chipper = "knowledge_system.gui:main"
kc = "knowledge_system.gui:main"

[project.urls]
"Homepage" = "https://github.com/msg43/skipthepodcast.com"
"Bug Reports" = "https://github.com/msg43/skipthepodcast.com/issues"
"Source" = "https://github.com/msg43/skipthepodcast.com"

[tool.setuptools.packages.find]
where = ["src"]
include = ["knowledge_system*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v"
markers = [
    "integration: marks tests as integration tests (requires external services like Ollama)",
    "e2e: marks tests as end-to-end tests",
]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true
mypy_path = "src"
namespace_packages = true
ignore_missing_imports = true
exclude = [
    "build/",
    "dist/",
    "venv/",
    "scripts/",
    ".*\\.egg-info/",
    ".mypy_cache/",
]

[[tool.mypy.overrides]]
module = [
    "whisperx.*",
    "yt_dlp.*",
    "streamlit.*",
]
ignore_missing_imports = true
