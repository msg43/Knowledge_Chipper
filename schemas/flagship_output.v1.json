{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "FlagshipOutputV1",
  "description": "Output schema for the Flagship Evaluator system that ranks and scores claims",
  "type": "object",
  "required": ["evaluated_claims", "summary_assessment"],
  "properties": {
    "evaluated_claims": {
      "type": "array",
      "description": "All claims with evaluation decisions and scores",
      "items": {
        "type": "object",
        "required": ["original_claim_text", "decision", "reasoning"],
        "properties": {
          "claim_id": {
            "type": "string",
            "description": "Identifier from input if provided"
          },
          "original_claim_text": {
            "type": "string",
            "description": "The original claim text"
          },
          "decision": {
            "type": "string",
            "enum": ["accept", "reject", "merge", "split"],
            "description": "Evaluation decision"
          },
          "revised_claim_text": {
            "type": "string",
            "description": "Revised claim text if modified"
          },
          "importance": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "description": "Importance score (0-10)"
          },
          "novelty": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "description": "Novelty score (0-10)"
          },
          "confidence_final": {
            "type": "number",
            "minimum": 0,
            "maximum": 10,
            "description": "Confidence score (0-10)"
          },
          "reasoning": {
            "type": "string",
            "description": "Detailed reasoning for decision and scores"
          },
          "rank": {
            "type": "integer",
            "minimum": 1,
            "description": "Ranking among accepted claims"
          },
          "tier": {
            "type": "string",
            "enum": ["A", "B", "C"],
            "description": "Quality tier based on scores"
          },
          "merge_with": {
            "type": "array",
            "items": {"type": "string"},
            "description": "IDs of claims to merge with (if decision is 'merge')"
          },
          "split_into": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["claim_text", "claim_type"],
              "properties": {
                "claim_text": {"type": "string"},
                "claim_type": {
                  "type": "string",
                  "enum": ["factual", "causal", "normative", "forecast", "definition"]
                }
              }
            },
            "description": "New claims if split (if decision is 'split')"
          }
        }
      }
    },
    "summary_assessment": {
      "type": "object",
      "required": ["total_claims_processed", "claims_accepted", "claims_rejected", "overall_quality"],
      "properties": {
        "total_claims_processed": {
          "type": "integer",
          "minimum": 0,
          "description": "Total number of claims evaluated"
        },
        "claims_accepted": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of claims accepted"
        },
        "claims_rejected": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of claims rejected"
        },
        "claims_merged": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of claims merged"
        },
        "claims_split": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of claims split"
        },
        "key_themes": {
          "type": "array",
          "items": {"type": "string"},
          "description": "Main themes identified in the claims"
        },
                "overall_quality": {
                  "type": "string",
                  "enum": ["high", "medium", "low"],
                  "description": "Overall assessment of extraction quality"
                },
        "recommendations": {
          "type": "string",
          "description": "Suggestions for improvement"
        },
        "average_scores": {
          "type": "object",
          "properties": {
            "importance": {"type": "number"},
            "novelty": {"type": "number"},
            "confidence": {"type": "number"}
          },
          "description": "Average scores across accepted claims"
        }
      }
    },
    "tier_distribution": {
      "type": "object",
      "description": "Distribution of claims across quality tiers",
      "properties": {
        "A": {"type": "integer", "minimum": 0},
        "B": {"type": "integer", "minimum": 0},
        "C": {"type": "integer", "minimum": 0}
      }
    }
  }
}
