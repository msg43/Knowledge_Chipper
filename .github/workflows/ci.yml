name: CI

on:
  push:
    branches:
      - '**'   # run on all branches, including feature branches
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.13]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      run: |
        brew install ffmpeg

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        pip install -e .
        # Verify pytest-cov is installed
        python -c "import pytest_cov; print('pytest-cov successfully installed')"

    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

    # - name: Type check with mypy
    #   run: |
    #     mypy src/ --ignore-missing-imports

    - name: Test with pytest (unit subset)
      run: |
        # Debug: Show what test files exist
        echo "=== Checking test directory structure ==="
        ls -la tests/ || echo "tests directory not found"
        find tests/ -name "*.py" -type f || echo "No Python test files found"
        
        # Debug: Show current directory and Python path
        echo "=== Environment Debug ==="
        pwd
        echo "Python path: $PYTHONPATH"
        python -c "import sys; print('Python sys.path:', sys.path)"
        
        # Run pytest with explicit discovery
        echo "=== Running pytest with discovery ==="
        pytest --collect-only -v
        
        # Run the actual tests
        echo "=== Running tests with coverage ==="
        pytest tests/ --cov=knowledge_system --cov-report=xml -v -k "not proxy and not youtube and not network"

    - name: Upload coverage reports
      if: hashFiles('coverage.xml') != ''
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    runs-on: macos-latest
    needs: test

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        # Ensure build backend and tooling are present for packaging
        pip install --upgrade setuptools wheel twine
        # Install the package so tests can import `knowledge_system`
        pip install -e .

    - name: Build package with project script (skip install smoke tests)
      run: |
        # Use repository build wrapper to ensure consistent local/CI behavior
        # Skip install smoke tests in CI to avoid optional heavy deps
        python scripts/project_build.py --skip-slow-tests --skip-install-test

  crash_catcher:
    runs-on: macos-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.13
      - name: Install light runtime deps
        run: |
          python -m pip install -U pip
          pip install -e .
      - name: Sanity checks (entry-points, imports, tools)
        run: |
          knowledge-system --version
          python -c "import knowledge_system.gui as g; print('GUI import OK')"
          ffmpeg -version | head -n 1 | cat
          python -c "import yt_dlp; print('yt_dlp OK')"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
